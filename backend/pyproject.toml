[tool.poetry]
name = "feed_watchdog"
version = "0.1.0"
description = "Feed watchdog web service"
authors = ["yakimka <ss.yakim@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/yakimka/feed_watchdog"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [
    {include = "development"},
    {include = "feed_watchdog/rest_api", from = "bases"},
    {include = "feed_watchdog/workers", from = "bases"},
    {include = "feed_watchdog/api_client", from = "components"},
    {include = "feed_watchdog/commands", from = "components"},
    {include = "feed_watchdog/domain", from = "components"},
    {include = "feed_watchdog/fetchers", from = "components"},
    {include = "feed_watchdog/handlers", from = "components"},
    {include = "feed_watchdog/http", from = "components"},
    {include = "feed_watchdog/pubsub", from = "components"},
    {include = "feed_watchdog/repositories", from = "components"},
    {include = "feed_watchdog/sentry", from = "components"},
    {include = "feed_watchdog/synchronize", from = "components"},
    {include = "feed_watchdog/utils", from = "components"},
]

[tool.poetry.dependencies]
python = "^3.10"

# Docs, optional, use `poetry install -E docs` to install them:
sphinx = { version = "^5.0",  optional = true }
sphinx-autodoc-typehints = { version = "^1.18", optional = true }
m2r2 = { version = "^0.3",  optional = true }
tomlkit = { version = "^0.11", optional = true }
redis = "^5.0.0rc2"
APScheduler = "^3.9.1"
dependency-injector = "^4.41.0"
httpx = {version = "^0.23.0", extras = ["processors"]}
async-timeout = {version = "^4.0.2", extras = ["processors"]}
tldextract = {version = "^3.2.1", extras = ["processors"]}
feedparser = {version = "^6.0.8", extras = ["processors"]}
aiogram = {version = "^2.20", extras = ["processors"]}
PyYAML = {version = "^6.0", extras = ["processors"]}
gunicorn = "^20.1.0"
python-decouple = "^3.6"
sentry-sdk = "^1.5.12"
fastapi = "^0.100.0"
uvicorn = {extras = ["standart"], version = "^0.18.3"}
motor = "^3.0.0"
mongodex = "^0.0.1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.5"
dacite = "^1.8.0"
pydantic-settings = "^2.0.2"


[tool.poetry.group.dev.dependencies]
hypothesis = "^6.46.3"
ipython = "^8.11.0"
isort = "^5.10.1"
mypy = "^1.0"
pre-commit = "^2.19.0"
pytest = "^7.1"
pytest-cov = "^3.0"
pytest-randomly = "^3.12"
tomli = "^2.0.1"
types-PyYAML = "^6.0.7"
types-redis = "^4.6.0.3"
types-requests = "^2.27.16"
yamllint = "^1.26.3"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-autodoc-typehints", "m2r2", "tomlkit"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
# isort configuration:
# https://github.com/timothycrosley/isort/wiki/isort-Settings
profile = "black"
include_trailing_comma = true
use_parentheses = true
# See https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 3
line_length = 80
known_first_party = ["feed_watchdog"]

[tool.black]
line-length = 80

[tool.pytest.ini_options]
# Directories that are not visited by pytest collector:
norecursedirs = ["*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]

# Strict `@xfail` by default:
xfail_strict = true

# Extra options:
addopts = [
  "--strict-markers",
  "--strict-config",
  "--tb=short",
  "--doctest-modules",
  "--cov",
  "--cov-report=term:skip-covered",
  "--cov-report=html",
  "--cov-report=xml",
  "--cov-branch",
#  "--cov-fail-under=100",
]

[tool.mypy]
# mypy configurations: https://mypy.readthedocs.io/en/latest/config_file.html
plugins = ["pydantic.mypy"]

allow_redefinition = false
check_untyped_defs = true
disallow_any_explicit = false
disallow_any_generics = false
disallow_untyped_calls = true
disallow_untyped_decorators = false
#disallow_incomplete_defs = true
#disallow_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
no_implicit_optional = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
mypy_path = [
    "components",
    "bases",
]
namespace_packages = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pylint.master]
extension-pkg-allow-list = ["dependency_injector"]

[tool.pylint.messages_control]
max-line-length = 80
